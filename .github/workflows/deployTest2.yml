name: Deploy to Azure MicroK8s

on:
  push:
    branches:
      - main  # Trigger the workflow when code is pushed to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code from the repository
      - name: Check out code
        uses: actions/checkout@v2

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin

      # Step 3: Build Docker image
      - name: Build Docker image
        run: docker build -t justine745/webservers:latest .

      # Step 4: Push Docker image to Docker Hub
      - name: Push Docker image
        run: docker push justine745/webservers:latest

      # Step 5: Set up SSH for Azure server
      - name: Set up SSH for Azure server
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.AZURE_SSH_KEY }}

      # Step 6: Deploy the latest image on Azure using kubectl
      - name: Deploy to MicroK8s
        run: |
          ssh -o StrictHostKeyChecking=no azureuser@20.224.160.198 << 'EOF'
            sudo microk8s kubectl set image deployment/nginx-webserver nginx=justine745/webservers:latest
            sudo microk8s kubectl rollout status deployment/nginx-webserver
          EOF

      # Step 7: Check LoadBalancer Service (nginx-webserver)
      - name: Check LoadBalancer Service (nginx-webserver)
        run: |
          ssh -o StrictHostKeyChecking=no azureuser@20.224.160.198 << 'EOF'
            # Check if LoadBalancer service is available and responding
            curl http://10.1.0.4
          EOF

      # Step 8: Check the logs of the nginx-webserver pods
      - name: Check logs of nginx-webserver pods
        run: |
          ssh -o StrictHostKeyChecking=no azureuser@20.224.160.198 << 'EOF'
            # Get logs of the nginx-webserver pods
            sudo microk8s.kubectl logs nginx-webserver-7c6b958c84-dsvhd
            sudo microk8s.kubectl logs nginx-webserver-7c6b958c84-z96tw
          EOF

      # Step 9: Verify index.html in the nginx container
      - name: Verify index.html in Nginx container
        run: |
          ssh -o StrictHostKeyChecking=no azureuser@20.224.160.198 << 'EOF'
            # Check the content of index.html in the nginx container
            sudo microk8s.kubectl exec -it nginx-webserver-7c6b958c84-dsvhd -- cat /usr/share/nginx/html/index.html
            sudo microk8s.kubectl exec -it nginx-webserver-7c6b958c84-z96tw -- cat /usr/share/nginx/html/index.html
          EOF

      # Step 10: Restart the nginx-webserver deployment if necessary
      - name: Restart nginx-webserver deployment
        run: |
          ssh -o StrictHostKeyChecking=no azureuser@20.224.160.198 << 'EOF'
            # Restart nginx-webserver deployment to apply the latest updates
            sudo microk8s.kubectl rollout restart deployment nginx-webserver
          EOF
